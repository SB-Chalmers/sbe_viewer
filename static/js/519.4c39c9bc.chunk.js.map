{"version":3,"file":"static/js/519.4c39c9bc.chunk.js","mappings":"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","sources":["components/tabs/TabStyles.tsx","components/tabs/HomeTab.tsx","config/api.ts","components/tabs/ImportDataTab.tsx","components/tabs/LayerManagementTab.tsx","components/tabs/BasemapTab.tsx","components/tabs/LightingTab.tsx","components/LeftDrawer.tsx"],"sourcesContent":["// src/components/tabs/TabStyles.tsx\nimport { SxProps } from '@mui/material';\n\nexport const tabContainerStyle: SxProps = {\n    p: 2,\n    width: '25vh', // Set a fixed width\n    backgroundColor: 'var(--bg-light)',\n    color: 'var(--text-light)',\n    '& .MuiTypography-root': {\n        color: 'var(--text-light)'\n    },\n    '& .MuiButton-root': {\n        backgroundColor: 'var(--button-primary)',\n        color: 'var(--button-text-primary)',\n        '&:hover': {\n            backgroundColor: 'var(--accent-hover)'\n        },\n        '&:active': {\n            backgroundColor: 'var(--accent-active)'\n        },\n        '&.Mui-disabled': {\n            backgroundColor: 'var(--accent-disabled)'\n        }\n    },\n    '& .MuiSelect-root': {\n        backgroundColor: 'var(--bg-light-secondary)',\n        color: 'var(--text-light)'\n    },\n    '& .MuiMenuItem-root': {\n        color: 'var(--text-light)'\n    },\n    '& .MuiSlider-root': {\n        color: 'var(--slider-color)',\n        '& .MuiSlider-thumb': {\n            '&:hover': {\n                boxShadow: '0 0 0 8px var(--accent-hover)'\n            }\n        }\n    },\n    '& .MuiSwitch-root': {\n        '& .MuiSwitch-track': {\n            backgroundColor: 'var(--text-light-secondary)'\n        },\n        '& .MuiSwitch-thumb': {\n            backgroundColor: 'var(--switch-color)'\n        }\n    },\n    '& .MuiIconButton-root': {\n        '&.active': {\n            color: 'var(--icon-active)'\n        }\n    }\n};\n","import React from 'react';\nimport { Box, Typography, Button } from '@mui/material';\nimport { tabContainerStyle } from './TabStyles';\n\ninterface HomeTabProps {\n    resetView: () => void;\n}\n\nconst HomeTab: React.FC<HomeTabProps> = ({ resetView }) => {\n    return (\n        <Box sx={tabContainerStyle}>\n            <Typography variant=\"h5\" gutterBottom sx={{ color: '#1E1E2D' }}>\n                Welcome to SBE Viewer\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom sx={{ color: '#1E1E2D' }}>\n                Use the Import Data tab to upload geoJSON files.\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom sx={{ color: '#1E1E2D' }}>\n                Navigate through Layers to reorder, rename, or style your data.\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom sx={{ color: '#1E1E2D' }}>\n                Adjust lighting in the Lighting tab.\n            </Typography>\n            <Button variant=\"contained\" color=\"primary\" onClick={resetView}>Reset View</Button>\n        </Box>\n    );\n};\n\nexport default HomeTab;\n","const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n\nexport const API_PREFIX = '/api';\nexport const API_ENDPOINTS = {\n  uploadHBJSON: `${API_BASE_URL}/api/hbjson/upload`\n};\n\nexport const PATHS = {\n  hbjsonUploads: '/HBJSONuploads/'\n};\n","import React, { useState } from 'react';\nimport { Box, Typography, Button, Alert, CircularProgress } from '@mui/material';\nimport { tabContainerStyle } from './TabStyles';\nimport { API_ENDPOINTS } from '../../config/api';\n\nconst ImportDataTab: React.FC = () => {\n    const [error, setError] = useState<string | null>(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        setError(null);\n        setIsLoading(true);\n        const files = event.target.files;\n\n        if (files && files.length > 0) {\n            const file = files[0];\n            if (!file.name.toLowerCase().endsWith('.hbjson')) {\n                setError('Please upload a .hbjson file');\n                setIsLoading(false);\n                return;\n            }\n\n            try {\n                const formData = new FormData();\n                formData.append('file', file);\n\n                const uploadResponse = await fetch(API_ENDPOINTS.uploadHBJSON, {\n                    method: 'POST',\n                    body: formData\n                });\n                \n                if (!uploadResponse.ok) {\n                    const errorData = await uploadResponse.json().catch(() => ({}));\n                    throw new Error(errorData.message || `Upload failed with status: ${uploadResponse.status}`);\n                }\n\n                const responseData = await uploadResponse.json();\n                console.log('File uploaded successfully:', responseData.filePath);\n            } catch (error) {\n                console.error('Error handling file:', error);\n                setError(error instanceof Error ? error.message : 'Failed to process file');\n            } finally {\n                setIsLoading(false);\n            }\n        } else {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <Box sx={tabContainerStyle}>\n            <Typography variant=\"h5\" gutterBottom sx={{ color: '#1E1E2D' }}>\n                Import Data\n            </Typography>\n            {error && (\n                <Alert severity=\"error\" sx={{ mb: 2 }}>\n                    {error}\n                </Alert>\n            )}\n            <Box sx={{ \n                border: '2px dashed var(--upload-border)', \n                p: 2, \n                textAlign: 'center',\n                '&:hover': {\n                    borderColor: 'var(--accent-hover)'\n                },\n                position: 'relative'\n            }}>\n                {isLoading && (\n                    <Box sx={{\n                        position: 'absolute',\n                        top: 0,\n                        left: 0,\n                        right: 0,\n                        bottom: 0,\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        backgroundColor: 'rgba(255, 255, 255, 0.7)',\n                    }}>\n                        <CircularProgress />\n                    </Box>\n                )}\n                <Typography variant=\"body1\" gutterBottom sx={{ color: '#1E1E2D' }}>\n                    Drag and drop your HBJSON files here\n                </Typography>\n                <Button \n                    variant=\"contained\" \n                    component=\"label\"\n                >\n                    Click to Upload\n                    <input type=\"file\" hidden onChange={handleFileUpload} />\n                </Button>\n            </Box>\n            {/* Add progress indicator and recent uploads list here */}\n        </Box>\n    );\n};\n\nexport default ImportDataTab;","import React, { useState } from 'react';\nimport { \n    Box, Typography, List, ListItem, ListItemText, IconButton, Collapse, \n    Select, MenuItem, FormControl, InputLabel \n} from '@mui/material';\nimport { \n    Visibility as VisibilityIcon, \n    VisibilityOff as VisibilityOffIcon, \n    ExpandMore, ExpandLess \n} from '@mui/icons-material';\nimport { tabContainerStyle } from './TabStyles';\n\ninterface LayerWithVisibility {\n    id: string;\n    visible: boolean;\n}\n\ninterface LayerManagementTabProps {\n    layers: LayerWithVisibility[];\n    onVisibilityToggle: (id: string) => void;\n    onColorByChange: (colorBy: string) => void;\n}\n\nconst LayerManagementTab: React.FC<LayerManagementTabProps> = ({ layers, onVisibilityToggle, onColorByChange }) => {\n    const [visibilityExpanded, setVisibilityExpanded] = useState(true);\n    const [buildingsExpanded, setBuildingsExpanded] = useState(false);\n    const [colorBy, setColorBy] = useState(''); // Set default value to empty string\n\n    const predefinedLayers = [\n        { id: 'buildings', name: '3D Buildings' },\n        { id: 'land-cover', name: 'Ground Shadows' },\n        { id: 'tree-layer', name: 'Tree Geometry Layer' },\n        { id: 'tree-points-layer', name: 'Tree Points Layer' },\n        { id: 'hbjson-glb-layer', name: 'HBJSON Layer' }\n    ];\n\n    const eligibleAttributes = [\n        'type', 'status', 'height', 'function', 'floors', \n        'floor_height', 'roof_type', 'EPC_class', 'annual_energy', 'area'\n    ];\n\n    const handleColorByChange = (event: any) => {\n        const variable = event.target.value;\n        console.log('Selected color by attribute:', variable); // Add this line\n        setColorBy(variable);\n        onColorByChange(variable);\n    };\n\n    return (\n        <Box sx={tabContainerStyle}>\n            <Typography variant=\"h5\" fontWeight=\"bold\" gutterBottom>\n                Layer Management\n            </Typography>\n            \n            {/* Layer Visibility Section */}\n            <Box mb={2}>\n                <Typography \n                    variant=\"h6\" \n                    onClick={() => setVisibilityExpanded(!visibilityExpanded)} \n                    sx={{ cursor: 'pointer', display: 'flex', alignItems: 'center', fontWeight: 'bold' }}\n                >\n                    Layer Visibility {visibilityExpanded ? <ExpandLess /> : <ExpandMore />}\n                </Typography>\n                <Collapse in={visibilityExpanded} timeout=\"auto\" unmountOnExit>\n                    <List>\n                        {predefinedLayers.map(layer => (\n                            <ListItem key={layer.id} sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                                <ListItemText primary={layer.name} sx={{ fontWeight: 500 }} />\n                                <IconButton \n                                    onClick={() => onVisibilityToggle(layer.id)}\n                                    sx={{ \n                                        color: layers.find(l => l.id === layer.id)?.visible ? \n                                            'var(--icon-active)' : 'var(--text-light-secondary)' \n                                    }}\n                                >\n                                    {layers.find(l => l.id === layer.id)?.visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\n                                </IconButton>\n                            </ListItem>\n                        ))}\n                    </List>\n                </Collapse>\n            </Box>\n\n            {/* Buildings Section */}\n            <Box>\n                <Typography \n                    variant=\"h6\" \n                    onClick={() => setBuildingsExpanded(!buildingsExpanded)} \n                    sx={{ cursor: 'pointer', display: 'flex', alignItems: 'center', fontWeight: 'bold' }}\n                >\n                    Buildings {buildingsExpanded ? <ExpandLess /> : <ExpandMore />}\n                </Typography>\n                <Collapse in={buildingsExpanded} timeout=\"auto\" unmountOnExit>\n                    <FormControl fullWidth margin=\"normal\" sx={{ mt: 2 }}>\n                        <InputLabel sx={{ \n                            mb: 1,\n                            color: 'var(--text-light)',\n                            '&.Mui-focused': {\n                                color: 'var(--text-light)'\n                            }\n                        }}>Color By</InputLabel>\n                        <Select \n                            value={colorBy} \n                            onChange={handleColorByChange}\n                            sx={{\n                                color: 'var(--text-light)',\n                                backgroundColor: 'var(--bg-light)',\n                                '& .MuiOutlinedInput-notchedOutline': {\n                                    borderColor: 'var(--border-light)',\n                                },\n                                '& .MuiSvgIcon-root': {\n                                    color: 'var(--text-light)',\n                                },\n                                '&:hover .MuiOutlinedInput-notchedOutline': {\n                                    borderColor: 'var(--accent-primary)',\n                                },\n                                '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                                    borderColor: 'var(--accent-primary)',\n                                }\n                            }}\n                            MenuProps={{\n                                PaperProps: {\n                                    sx: {\n                                        backgroundColor: 'var(--bg-light)',\n                                        color: 'var(--text-light)',\n                                        '& .MuiMenuItem-root': {\n                                            color: 'var(--text-light)',\n                                            '&:hover': {\n                                                backgroundColor: 'var(--bg-light-secondary)',\n                                            },\n                                            '&.Mui-selected': {\n                                                backgroundColor: 'var(--accent-primary)',\n                                                color: 'var(--button-text-primary)',\n                                                '&:hover': {\n                                                    backgroundColor: 'var(--accent-hover)',\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }}\n                        >\n                            {eligibleAttributes.map(attr => (\n                                <MenuItem key={attr} value={attr}>{attr}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </Collapse>\n            </Box>\n        </Box>\n    );\n};\n\nexport default LayerManagementTab;","import React, { useState } from 'react';\nimport { Box, Typography, Select, MenuItem, SelectChangeEvent } from '@mui/material';\nimport { tabContainerStyle } from '../tabs/TabStyles'; // Use MUI v5 styles\ninterface BasemapTabProps {\n    onBasemapChange: (basemapStyle: string) => void;\n}\n\nconst BasemapTab: React.FC<BasemapTabProps> = ({ onBasemapChange }) => {\n    const [selectedBasemap, setSelectedBasemap] = useState('mapbox://styles/mapbox/light-v10');\n\n    const basemaps = [\n        { id: 'mapbox://styles/mapbox/light-v10', name: 'Light' },\n        { id: 'mapbox://styles/mapbox/satellite-v9', name: 'Satellite' },\n        { id: 'mapbox://styles/mapbox/outdoors-v11', name: 'Terrain' },\n        { id: 'mapbox://styles/mapbox/streets-v11', name: 'Streets' },\n        { id: 'mapbox://styles/mapbox/dark-v10', name: 'Dark' },\n    ];\n\n    const handleBasemapChange = (event: SelectChangeEvent<string>) => {\n        const newBasemap = event.target.value;\n        setSelectedBasemap(newBasemap);\n        onBasemapChange(newBasemap);\n    };\n\n    return (\n        <Box sx={tabContainerStyle}>\n            <Typography variant=\"h5\" gutterBottom sx={{ color: '#1E1E2D' }}>\n                Basemap Selection\n            </Typography>\n            <Select\n                fullWidth\n                value={selectedBasemap}\n                onChange={handleBasemapChange}\n                sx={{ backgroundColor: '#FFFFFF', color: '#1E1E2D' }}\n                MenuProps={{\n                    PaperProps: {\n                        style: {\n                            maxHeight: 200,\n                            overflow: 'auto',\n                        },\n                    },\n                }}\n            >\n                {basemaps.map((basemap) => (\n                    <MenuItem key={basemap.id} value={basemap.id}>\n                        {basemap.name}\n                    </MenuItem>\n                ))}\n            </Select>\n        </Box>\n    );\n};\n\nexport default BasemapTab;\n","import React from 'react';\nimport { Box, Typography, Switch, Slider } from '@mui/material';\nimport { tabContainerStyle } from './TabStyles';\n\nconst LightingTab: React.FC = () => {\n    const [sunlight, setSunlight] = React.useState(true);\n    const [sunColor, setSunColor] = React.useState(50);\n    const [diffuseColor, setDiffuseColor] = React.useState(50);\n    const [shadowColor, setShadowColor] = React.useState(50);\n\n    const handleSunlightToggle = () => {\n        setSunlight(!sunlight);\n    };\n\n    const handleSliderChange = (setter: React.Dispatch<React.SetStateAction<number>>) => (\n        event: Event,\n        newValue: number | number[]\n    ) => {\n        setter(newValue as number);\n    };\n\n    return (\n        <Box sx={tabContainerStyle}>\n            <Typography variant=\"h5\" gutterBottom sx={{ color: '#1E1E2D' }}>\n                Lighting Setup\n            </Typography>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <Typography variant=\"body1\" gutterBottom>\n                    Sunlight\n                </Typography>\n                <Switch \n                    checked={sunlight} \n                    onChange={handleSunlightToggle}\n                />\n            </Box>\n            <Typography variant=\"body1\" gutterBottom>\n                Sun Color\n            </Typography>\n            <Slider value={sunColor} onChange={handleSliderChange(setSunColor)} />\n            <Typography variant=\"body1\" gutterBottom>\n                Diffuse Color\n            </Typography>\n            <Slider value={diffuseColor} onChange={handleSliderChange(setDiffuseColor)} />\n            <Typography variant=\"body1\" gutterBottom>\n                Shadow Color\n            </Typography>\n            <Slider value={shadowColor} onChange={handleSliderChange(setShadowColor)} />\n            {/* Add live preview of lighting changes here */}\n        </Box>\n    );\n};\n\nexport default LightingTab;\n","import React, { useState } from 'react';\nimport {\n    Drawer,\n    Box,\n    Tooltip,\n    Divider,\n    Typography,\n    List,\n    ListItemButton,\n    ListItemIcon,\n} from '@mui/material';\nimport {\n    Dashboard as DashboardIcon,\n    FileUpload as FileUploadIcon,\n    Layers as LayersIcon,\n    Map as MapIcon,\n    WbSunny as WbSunnyIcon,\n} from '@mui/icons-material';\nimport HomeTab from './tabs/HomeTab';\nimport ImportDataTab from './tabs/ImportDataTab';\nimport LayerManagementTab from './tabs/LayerManagementTab';\nimport BasemapTab from './tabs/BasemapTab';\nimport LightingTab from './tabs/LightingTab';\nimport { Layer as DeckLayer, Layer } from '@deck.gl/core'; \n\ninterface LayerWithVisibility extends DeckLayer {\n    visible: boolean;\n}\n\ninterface LeftDrawerProps {\n    resetView: () => void;\n    onBasemapChange: (style: string) => void;\n    layers: LayerWithVisibility[]; // Use LayerWithVisibility\n    onVisibilityToggle: (id: string) => void;\n    onColorByChange: (colorBy: string) => void;\n    onAddLayer: (layer: Layer) => void;  // Add this line\n}\n\nconst LeftDrawer: React.FC<LeftDrawerProps> = ({ resetView, onBasemapChange, layers, onVisibilityToggle, onColorByChange, onAddLayer }) => {\n    const [selectedIndex, setSelectedIndex] = useState(0);\n    const [basemapStyle, setBasemapStyle] = useState('mapbox://styles/mapbox/light-v10');\n\n    const handleListItemClick = (index: number) => {\n        setSelectedIndex(index);\n    };\n\n    const handleBasemapChange = (style: string) => {\n        setBasemapStyle(style);\n        onBasemapChange(style);\n    };\n\n    const tabs = [\n        { component: <HomeTab resetView={resetView} />, icon: <DashboardIcon fontSize=\"large\" />, tooltip: \"Home\" },\n        { component: <ImportDataTab />, icon: <FileUploadIcon fontSize=\"large\" />, tooltip: \"Import Data\" },\n        { component: <LayerManagementTab layers={layers} onVisibilityToggle={onVisibilityToggle} onColorByChange={onColorByChange} />, icon: <LayersIcon fontSize=\"large\" />, tooltip: \"Layer Management\" },\n        { component: <BasemapTab onBasemapChange={handleBasemapChange} />, icon: <MapIcon fontSize=\"large\" />, tooltip: \"Basemap\" },\n        { component: <LightingTab />, icon: <WbSunnyIcon fontSize=\"large\" />, tooltip: \"Lighting\" },\n    ];\n\n    return (\n        <Box sx={{ \n            display: 'flex',\n            backgroundColor: 'var(--bg-light)',\n            minHeight: '100vh'\n        }}>\n            <Drawer\n                variant=\"permanent\"\n                anchor=\"left\"\n                sx={{\n                    width: 70,\n                    flexShrink: 0,\n                    '& .MuiDrawer-paper': {\n                        width: 70,\n                        boxSizing: 'border-box',\n                        backgroundColor: 'var(--drawer-background)',\n                        color: 'var(--drawer-text)',\n                        overflowX: 'hidden',\n                        position: 'relative',\n                        height: '100%'\n                    },\n                }}\n            >\n                <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', p: 1 }}>\n                    <Typography variant=\"h6\" noWrap sx={{ color: 'var(--drawer-text)', ml: 1 }}>SBE</Typography>\n                </Box>\n\n                <Divider sx={{ backgroundColor: 'var(--drawer-divider)' }} />\n\n                <List>\n                    {tabs.map((tab, index) => (\n                        <Tooltip key={index} title={tab.tooltip} placement=\"right\">\n                            <ListItemButton\n                                selected={selectedIndex === index}\n                                onClick={() => handleListItemClick(index)}\n                                disableGutters\n                                sx={{ justifyContent: 'center' }}\n                            >\n                                <ListItemIcon sx={{ color: 'var(--drawer-text)', minWidth: 'auto' }}>\n                                    {tab.icon}\n                                </ListItemIcon>\n                            </ListItemButton>\n                        </Tooltip>\n                    ))}\n                </List>\n\n                <Divider sx={{ backgroundColor: 'var(--drawer-divider)' }} />\n            </Drawer>\n            <Box \n                component=\"main\" \n                sx={{ \n                    flexGrow: 1, \n                    p: 3, \n                    backgroundColor: 'var(--bg-light)',\n                    minHeight: '100vh'\n                }}\n            >\n                {tabs[selectedIndex].component}\n            </Box>\n        </Box>\n    );\n};\n\nexport default LeftDrawer;"],"names":["tabContainerStyle","p","width","backgroundColor","color","boxShadow","_ref","resetView","_jsxs","Box","sx","children","_jsx","Typography","variant","gutterBottom","Button","onClick","API_ENDPOINTS","uploadHBJSON","process","REACT_APP_API_URL","ImportDataTab","error","setError","useState","isLoading","setIsLoading","Alert","severity","mb","border","textAlign","borderColor","position","top","left","right","bottom","display","alignItems","justifyContent","CircularProgress","component","type","hidden","onChange","async","files","event","target","length","file","name","toLowerCase","endsWith","formData","FormData","append","uploadResponse","fetch","method","body","ok","errorData","json","catch","Error","message","status","responseData","console","log","filePath","layers","onVisibilityToggle","onColorByChange","visibilityExpanded","setVisibilityExpanded","buildingsExpanded","setBuildingsExpanded","colorBy","setColorBy","fontWeight","cursor","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","id","map","layer","_layers$find","_layers$find2","ListItem","ListItemText","primary","IconButton","find","l","visible","VisibilityIcon","VisibilityOffIcon","FormControl","fullWidth","margin","mt","InputLabel","Select","value","variable","MenuProps","PaperProps","attr","MenuItem","onBasemapChange","selectedBasemap","setSelectedBasemap","newBasemap","style","maxHeight","overflow","basemap","LightingTab","sunlight","setSunlight","React","sunColor","setSunColor","diffuseColor","setDiffuseColor","shadowColor","setShadowColor","handleSliderChange","setter","newValue","Switch","checked","handleSunlightToggle","Slider","onAddLayer","selectedIndex","setSelectedIndex","basemapStyle","setBasemapStyle","tabs","HomeTab","icon","DashboardIcon","fontSize","tooltip","FileUploadIcon","LayerManagementTab","LayersIcon","BasemapTab","MapIcon","WbSunnyIcon","minHeight","Drawer","anchor","flexShrink","boxSizing","overflowX","height","noWrap","ml","Divider","tab","index","Tooltip","title","placement","ListItemButton","selected","handleListItemClick","disableGutters","ListItemIcon","minWidth","flexGrow"],"sourceRoot":""}